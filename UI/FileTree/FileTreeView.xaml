<!-- UI/FileTree/FileTreeListView.xaml -->
<UserControl x:Class="ExplorerPro.UI.FileTree.FileTreeListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ExplorerPro.UI.FileTree"
             xmlns:controls="clr-namespace:ExplorerPro.UI.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <Grid>
        <controls:TreeListView x:Name="treeListView" BorderThickness="0">
            <controls:TreeListView.Resources>
                <!-- Style for tree list items -->
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="FontWeight" Value="{Binding FontWeight}" />
                    <Setter Property="Foreground" Value="{Binding Foreground}" />
                </Style>
            </controls:TreeListView.Resources>
            
            <controls:TreeListView.View>
                <GridView>
                    <!-- Name Column with TreeView-like indentation and icon -->
                    <GridViewColumn Header="Name" Width="250">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <!-- Expander for directories (visibility bound to IsDirectory) -->
                                    <Expander Width="16" Height="16" Margin="0,0,4,0"
                                             Visibility="{Binding IsDirectory, Converter={StaticResource BooleanToVisibilityConverter}}"
                                             IsExpanded="{Binding IsExpanded, Mode=TwoWay}">
                                        <Expander.Style>
                                            <Style TargetType="{x:Type Expander}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Expander}">
                                                            <Border Background="Transparent">
                                                                <ToggleButton IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
                                                                    <ToggleButton.Style>
                                                                        <Style TargetType="{x:Type ToggleButton}">
                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                                                        <Border Background="Transparent">
                                                                                            <Path x:Name="ExpandPath" Stroke="#FF989898" StrokeThickness="1" 
                                                                                                  Data="M 0,0 L 6,6 L 0,12" VerticalAlignment="Center" HorizontalAlignment="Center" />
                                                                                        </Border>
                                                                                        <ControlTemplate.Triggers>
                                                                                            <Trigger Property="IsChecked" Value="True">
                                                                                                <Setter TargetName="ExpandPath" Property="Data" Value="M 0,0 L 6,6 L 12,0" />
                                                                                            </Trigger>
                                                                                        </ControlTemplate.Triggers>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                        </Style>
                                                                    </ToggleButton.Style>
                                                                </ToggleButton>
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Expander.Style>
                                    </Expander>
                                    
                                    <!-- Empty space for non-directory items -->
                                    <Rectangle Width="16" Height="16" Margin="0,0,4,0"
                                              Visibility="{Binding IsDirectory, Converter={StaticResource InverseBooleanToVisibilityConverter}}" />
                                    
                                    <!-- Icon -->
                                    <Image Width="16" Height="16" Margin="0,0,4,0" Source="{Binding Icon}" />
                                    
                                    <!-- Name -->
                                    <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    
                    <!-- Size Column -->
                    <GridViewColumn Header="Size" Width="100" DisplayMemberBinding="{Binding Size}" />
                    
                    <!-- Type Column -->
                    <GridViewColumn Header="Type" Width="120" DisplayMemberBinding="{Binding Type}" />
                    
                    <!-- Modified Column -->
                    <GridViewColumn Header="Date Modified" Width="150" DisplayMemberBinding="{Binding LastModifiedStr}" />
                </GridView>
            </controls:TreeListView.View>
            
            <controls:TreeListView.ContextMenu>
                <ContextMenu x:Name="treeContextMenu">
                    <!-- Context menu items will be added programmatically -->
                </ContextMenu>
            </controls:TreeListView.ContextMenu>
            
        </controls:TreeListView>
    </Grid>
    
    <UserControl.Resources>
        <!-- Boolean to Visibility converter -->
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        
        <!-- Inverse Boolean to Visibility converter -->
        <local:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
    </UserControl.Resources>
</UserControl>