<UserControl x:Class="ExplorerPro.UI.FileTree.ImprovedFileTreeListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ExplorerPro.UI.FileTree"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/FileTreeResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converter for level to margin -->
            <local:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
            
            <!-- Converter for expander positioning to the right of lines -->
            <local:ExpanderRightIndentConverter x:Key="ExpanderRightIndentConverter"/>
            
            <!-- Boolean to Visibility Converter -->
            <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
            <!-- Multi-select converters -->
            <local:BoolToMultiSelectTagConverter x:Key="BoolToMultiSelectTagConverter"/>
            <local:MultiSelectVisibilityConverter x:Key="MultiSelectVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <!-- Main grid -->
    <Grid x:Name="MainGrid" Background="{DynamicResource BackgroundColor}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Column Headers -->
        <Border Grid.Row="0" 
                Height="28" VerticalAlignment="Top"
                Background="{DynamicResource BackgroundColor}" 
                BorderBrush="{DynamicResource BorderColor}" BorderThickness="0,0,0,1"
                Panel.ZIndex="1">
            <Grid MinWidth="620">
                <Grid.ColumnDefinitions>
                    <!-- Checkbox column -->
                    <ColumnDefinition Width="Auto"/>
                    <!-- Name column (resizable) -->
                    <ColumnDefinition x:Name="NameColumn" Width="250" MinWidth="150" MaxWidth="600"/>
                    <!-- Date Modified column (moved from position 5 to 3) -->
                    <ColumnDefinition Width="150" MinWidth="120"/>
                    <!-- Type column (moved from position 4 to 4) -->
                    <ColumnDefinition Width="120" MinWidth="100"/>
                    <!-- Size column (moved from position 3 to 5) -->
                    <ColumnDefinition Width="100" MinWidth="80"/>
                    <!-- Remaining space -->
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                <!-- Multi-select checkbox header -->
                <CheckBox Grid.Column="0" 
                          x:Name="SelectAllCheckBox"
                          Margin="4,0,4,0"
                          VerticalAlignment="Center"
                          IsChecked="{Binding SelectionService.AreAllItemsSelected, Mode=OneWay}"
                          Visibility="{Binding SelectionService.IsMultiSelectMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                          Click="SelectAllCheckBox_Click"
                          ToolTip="Select/Deselect All"/>
                
                <!-- Name Header with sticky multi-select toggle -->
                <Grid Grid.Column="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <TextBlock Grid.Column="0" Text="Name" Padding="8,4" VerticalAlignment="Center" 
                               Foreground="{DynamicResource TextColor}" FontWeight="SemiBold"/>
                    
                    <!-- Sticky multi-select toggle button -->
                    <ToggleButton Grid.Column="2" 
                                  x:Name="StickyMultiSelectToggle"
                                  Width="22" Height="22"
                                  Margin="0,0,4,0"
                                  IsChecked="{Binding SelectionService.StickyMultiSelectMode, Mode=TwoWay}"
                                  ToolTip="Toggle sticky multi-select mode"
                                  Style="{StaticResource {x:Type ToggleButton}}">
                        <Path Data="M4,4 L4,20 L20,20 L20,4 Z M7,8 L11,12 L17,6" 
                              Stroke="{DynamicResource TextColor}" 
                              StrokeThickness="2" 
                              Width="16" Height="16"/>
                    </ToggleButton>
                </Grid>
                
                <!-- Date Modified Header (now in column 2) -->
                <Border Grid.Column="2" BorderBrush="{DynamicResource BorderColor}" BorderThickness="1,0,0,0">
                    <TextBlock Text="Date Modified" Padding="8,4" VerticalAlignment="Center" 
                               Foreground="{DynamicResource TextColor}" FontWeight="SemiBold"/>
                </Border>
                
                <!-- Type Header (now in column 3) -->
                <Border Grid.Column="3" BorderBrush="{DynamicResource BorderColor}" BorderThickness="1,0,0,0">
                    <TextBlock Text="Type" Padding="8,4" VerticalAlignment="Center" 
                               Foreground="{DynamicResource TextColor}" FontWeight="SemiBold"/>
                </Border>
                
                <!-- Size Header (now in column 4) -->
                <Border Grid.Column="4" BorderBrush="{DynamicResource BorderColor}" BorderThickness="1,0,0,0">
                    <TextBlock Text="Size" Padding="8,4" TextAlignment="Right" VerticalAlignment="Center" 
                               Foreground="{DynamicResource TextColor}" FontWeight="SemiBold"/>
                </Border>
                
                <!-- GridSplitter for Name column -->
                <GridSplitter Grid.Column="1"
                              x:Name="NameColumnSplitter"
                              Style="{StaticResource PolishedColumnResizerStyle}"
                              ResizeDirection="Columns"
                              ResizeBehavior="CurrentAndNext"
                              DragCompleted="NameColumnSplitter_DragCompleted"
                              Panel.ZIndex="2"/>
            </Grid>
        </Border>
        
        <!-- Tree content - TreeView with its own ScrollViewer enabled -->
        <TreeView Grid.Row="1" 
                  x:Name="fileTreeView" 
                  BorderThickness="0"
                  Background="{DynamicResource TreeViewBackground}"
                  VirtualizingStackPanel.IsVirtualizing="True"
                  VirtualizingStackPanel.VirtualizationMode="Standard"
                  ScrollViewer.CanContentScroll="False"
                  ScrollViewer.HorizontalScrollBarVisibility="Auto"
                  ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.PanningMode="Both"
                  Tag="{Binding SelectionService.IsMultiSelectMode, Converter={StaticResource BoolToMultiSelectTagConverter}}"
                  ItemsSource="{Binding RootItems}">
            
            <!-- Enhanced TreeView Resources with Smooth Animations -->
            <TreeView.Resources>
                <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource BaseScrollViewerStyle}">
                    <Setter Property="Focusable" Value="False"/>
                </Style>
                
                <!-- Enhanced TreeViewItem Style with Smooth Animations -->
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemWithLines}">
                    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                    <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>
                    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Item"/>
                    
                    <!-- Performance-optimized hover effects using simple property changes -->
                    <Style.Triggers>
                        <!-- Lightweight hover effect using background opacity -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#E5F3FF" Opacity="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <!-- Smooth selection highlighting -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource SelectionBackgroundColor}"/>
                        </Trigger>
                        
                        <!-- Combined hover + selection state -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background">
                                <Setter.Value>
                                    <SolidColorBrush Color="#CCE8FF" Opacity="0.8"/>
                                </Setter.Value>
                            </Setter>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.Resources>
            
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <Grid x:Name="ItemGrid" MinWidth="620">
                        <Grid.ColumnDefinitions>
                            <!-- Checkbox column -->
                            <ColumnDefinition Width="Auto"/>
                            <!-- Name column - bind to the header column's Width but allow extension -->
                            <ColumnDefinition Width="{Binding ElementName=NameColumn, Path=Width, Mode=OneWay}" MinWidth="150"/>
                            <!-- Date Modified column (moved from position 5 to 3) -->
                            <ColumnDefinition Width="150" MinWidth="120"/>
                            <!-- Type column (moved from position 4 to 4) -->
                            <ColumnDefinition Width="120" MinWidth="100"/>
                            <!-- Size column (moved from position 3 to 5) -->
                            <ColumnDefinition Width="100" MinWidth="80"/>
                            <!-- Remaining space -->
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Multi-selection checkbox - Use TwoWay binding for proper state synchronization -->
                        <CheckBox Grid.Column="0" 
                                  x:Name="ItemCheckBox"
                                  Margin="4,0,4,0"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  Visibility="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, 
                                              Path=Tag, 
                                              Converter={StaticResource MultiSelectVisibilityConverter}}"
                                  Click="SelectionCheckBox_Click"
                                  Tag="{Binding}"/>
                        
                        <!-- Name Column with tree structure -->
                        <Grid Grid.Column="1">
                            <!-- Tree structure content -->
                            <Grid>
                                <!-- Background canvas for drawing connecting lines -->
                                <Canvas Background="Transparent"
                                       Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}}"
                                       Height="20" HorizontalAlignment="Left" Width="40"
                                       ClipToBounds="False">
                                    
                                    <!-- Horizontal line to expander -->
                                    <Line x:Name="HorizontalLine"
                                          X1="0" Y1="10" X2="25" Y2="10"
                                          Stroke="{DynamicResource TreeLineColor}"
                                          StrokeThickness="1">
                                        <Line.Style>
                                            <Style TargetType="Line">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Level}" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Line.Style>
                                    </Line>
                                    
                                    <!-- Vertical line from parent -->
                                    <Line x:Name="VerticalLine"
                                          X1="0" Y1="0" X2="0" Y2="10"
                                          Stroke="{DynamicResource TreeLineColor}"
                                          StrokeThickness="1">
                                        <Line.Style>
                                            <Style TargetType="Line">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Level}" Value="0">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Line.Style>
                                    </Line>
                                </Canvas>
                                
                                <!-- Name content with indentation and expander -->
                                <StackPanel Orientation="Horizontal"
                                           Margin="{Binding Level, Converter={StaticResource ExpanderRightIndentConverter}}">
                                    
                                    <!-- Expander Toggle Button -->
                                    <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                                 VerticalAlignment="Center">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource Windows11ExpanderStyle}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HasChildren}" Value="False">
                                                        <Setter Property="Visibility" Value="Hidden" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    
                                    <!-- File/Folder Icon -->
                                    <Image Source="{Binding Icon}" Width="16" Height="16" 
                                           Margin="2,0,5,0" VerticalAlignment="Center"
                                           RenderOptions.BitmapScalingMode="HighQuality"/>
                                    
                                    <!-- File/Folder Name - Editable Content -->
                                    <ContentPresenter x:Name="NameContentPresenter" VerticalAlignment="Center">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <!-- Display Mode - TextBlock -->
                                                    <TextBlock x:Name="DisplayNameTextBlock"
                                                               Text="{Binding Name}" 
                                                               TextTrimming="None"
                                                               TextWrapping="NoWrap"
                                                               Foreground="{Binding Foreground}"
                                                               FontWeight="{Binding FontWeight}"
                                                               ToolTip="{Binding Path}">
                                                        <TextBlock.Style>
                                                            <Style TargetType="TextBlock">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsInEditMode}" Value="True">
                                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBlock.Style>
                                                    </TextBlock>
                                                    
                                                    <!-- Edit Mode - TextBox -->
                                                    <TextBox x:Name="EditNameTextBox"
                                                             Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
                                                             BorderThickness="1"
                                                             BorderBrush="{DynamicResource BorderBrush}"
                                                             Background="{DynamicResource TextBoxBackground}"
                                                             Foreground="{DynamicResource TextColor}"
                                                             Padding="2,1"
                                                             KeyDown="EditNameTextBox_KeyDown"
                                                             LostFocus="EditNameTextBox_LostFocus"
                                                             Loaded="EditNameTextBox_Loaded">
                                                        <TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding IsInEditMode}" Value="True">
                                                                        <Setter Property="Visibility" Value="Visible"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>
                                                    </TextBox>
                                                </Grid>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                </StackPanel>
                            </Grid>
                        </Grid>
                        
                        <!-- Date Modified Column (now in column 2) -->
                        <TextBlock Grid.Column="2" Text="{Binding LastModifiedStr}" 
                                  VerticalAlignment="Center" 
                                  TextAlignment="Left"
                                  Margin="5,0"
                                  TextTrimming="None"
                                  TextWrapping="NoWrap"
                                  Foreground="{Binding Foreground}"
                                  FontWeight="{Binding FontWeight}"/>
                        
                        <!-- Type Column (now in column 3) -->
                        <TextBlock Grid.Column="3" Text="{Binding Type}" 
                                  VerticalAlignment="Center" 
                                  TextAlignment="Left"
                                  Margin="5,0"
                                  TextTrimming="None"
                                  TextWrapping="NoWrap"
                                  Foreground="{Binding Foreground}"
                                  FontWeight="{Binding FontWeight}"/>
                        
                        <!-- Size Column (now in column 4) -->
                        <TextBlock Grid.Column="4" Text="{Binding Size}" 
                                  VerticalAlignment="Center" 
                                  TextAlignment="Right"
                                  Margin="5,0"
                                  TextTrimming="None"
                                  TextWrapping="NoWrap"
                                  Foreground="{Binding Foreground}"
                                  FontWeight="{Binding FontWeight}"/>
                    </Grid>
                    
                    <!-- Triggers for visual feedback when selection changes -->
                    <HierarchicalDataTemplate.Triggers>
                        <!-- Ensure checkbox state updates when IsSelected changes -->
                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                            <Setter TargetName="ItemCheckBox" Property="IsChecked" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsSelected}" Value="False">
                            <Setter TargetName="ItemCheckBox" Property="IsChecked" Value="False"/>
                        </DataTrigger>
                    </HierarchicalDataTemplate.Triggers>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>