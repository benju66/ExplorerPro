<UserControl x:Class="ExplorerPro.UI.FileTree.ImprovedFileTreeListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ExplorerPro.UI.FileTree"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>
        <!-- Define GridView here to use as a resource -->
        <GridView x:Key="columnHeaderGridView" x:Name="columnHeaderGridView">
            <!-- Columns will be added programmatically with bindings to the width properties -->
        </GridView>
        
        <!-- Converter for level to margin -->
        <local:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
        
        <!-- Boolean to Visibility Converter -->
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Tree line colors -->
        <SolidColorBrush x:Key="TreeLineColor" Color="#C0C0C0"/>
        <SolidColorBrush x:Key="TreeLineHoverColor" Color="#007ACC"/>
        
        <!-- Expander ToggleButton Style -->
        <Style x:Key="TreeViewExpanderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Width="16" Height="16">
                            <!-- Default: Collapsed (pointing right) -->
                            <Path x:Name="ExpandPath"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="#FF6C6C6C"
                                  StrokeThickness="1"
                                  Data="M 6,4 L 10,8 L 6,12" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Expanded: pointing down -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 4,6 L 8,10 L 12,6" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF1BBBFA" />
                                <Setter TargetName="ExpandPath" Property="StrokeThickness" Value="1.5" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF003C74" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hide the expander for non-directories -->
                <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <!-- Hide the expander for directories without children -->
                <DataTrigger Binding="{Binding HasChildren}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Alternative Modern Expander Style with filled triangles -->
        <Style x:Key="ModernTreeViewExpanderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Margin" Value="0,0,5,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Width="16" Height="16">
                            <!-- Default: Collapsed (pointing right) -->
                            <Path x:Name="ExpandPath"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="#FF6C6C6C"
                                  Data="M 6,4 L 10,8 L 6,12 Z" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Expanded: pointing down -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 4,6 L 8,10 L 12,6 Z" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Fill" Value="#FF1BBBFA" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ExpandPath" Property="Fill" Value="#FF003C74" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hide the expander for non-directories -->
                <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <!-- Hide the expander for directories without children -->
                <DataTrigger Binding="{Binding HasChildren}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <!-- Windows 11-style Expander with rounded arrows -->
        <Style x:Key="Windows11ExpanderStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Width="20" Height="20" CornerRadius="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#0F000000" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <!-- Default: Collapsed (pointing right) -->
                            <Path x:Name="ExpandPath"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Stroke="#FF484848"
                                  StrokeThickness="1.5"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  StrokeLineJoin="Round"
                                  Data="M 8,6 L 12,10 L 8,14" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Expanded: pointing down -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="ExpandPath" Property="Data" Value="M 6,8 L 10,12 L 14,8" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ExpandPath" Property="Stroke" Value="#FF005FB8" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!-- Hide the expander for non-directories -->
                <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <!-- Hide the expander for directories without children -->
                <DataTrigger Binding="{Binding HasChildren}" Value="False">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Simplified TreeViewItem style with basic connecting lines -->
        <Style x:Key="TreeViewItemWithLines" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
            <Setter Property="FontWeight" Value="{Binding FontWeight}"/>
            <Setter Property="Foreground" Value="{Binding Foreground}"/>
            <!-- Remove TreeView's default indentation -->
            <Setter Property="Margin" Value="-19,0,0,0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <!-- Column Headers Row -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Column Headers with Border for background -->
        <Border Grid.Row="0" Background="#F0F0F0" BorderBrush="#D0D0D0" BorderThickness="0,0,0,1">
            <GridViewHeaderRowPresenter x:Name="headerPresenter" 
                                       Columns="{Binding Source={StaticResource columnHeaderGridView}, Path=Columns}"/>
        </Border>
        
        <!-- File TreeView with proper column alignment -->
        <TreeView x:Name="fileTreeView" Grid.Row="1" BorderThickness="0"
                 VirtualizingStackPanel.IsVirtualizing="True"
                 VirtualizingStackPanel.VirtualizationMode="Recycling"
                 ItemContainerStyle="{StaticResource TreeViewItemWithLines}">
            
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <!-- Grid with base compensation margin and connecting lines -->
                    <Grid Margin="19,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="{Binding NameColumnWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ImprovedFileTreeListView}}}"/>
                            <ColumnDefinition Width="{Binding SizeColumnWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ImprovedFileTreeListView}}}"/>
                            <ColumnDefinition Width="{Binding TypeColumnWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ImprovedFileTreeListView}}}"/>
                            <ColumnDefinition Width="{Binding DateColumnWidth, RelativeSource={RelativeSource AncestorType={x:Type local:ImprovedFileTreeListView}}}"/>
                        </Grid.ColumnDefinitions>
                        
                        <!-- Background canvas for drawing connecting lines -->
                        <Canvas Grid.ColumnSpan="4" Background="Transparent"
                               Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}}"
                               Height="20" HorizontalAlignment="Left" Width="1000">
                            
                            <!-- Horizontal line to content (for non-root items) -->
                            <Line x:Name="HorizontalLine"
                                  X1="0" Y1="10" X2="19" Y2="10"
                                  Stroke="{StaticResource TreeLineColor}"
                                  StrokeThickness="1">
                                <Line.Style>
                                    <Style TargetType="Line">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Level}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Line.Style>
                            </Line>
                            
                            <!-- Vertical line from parent (for non-root items) -->
                            <Line x:Name="VerticalLine"
                                  X1="0" Y1="0" X2="0" Y2="10"
                                  Stroke="{StaticResource TreeLineColor}"
                                  StrokeThickness="1">
                                <Line.Style>
                                    <Style TargetType="Line">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Level}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Line.Style>
                            </Line>
                        </Canvas>
                        
                        <!-- Name Column with tree indentation and expander -->
                        <StackPanel Grid.Column="0" Orientation="Horizontal"
                                   Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}}">
                            
                            <!-- Expander Toggle Button -->
                            <ToggleButton Style="{StaticResource Windows11ExpanderStyle}"
                                         IsChecked="{Binding IsExpanded, Mode=TwoWay}">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton" BasedOn="{StaticResource Windows11ExpanderStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding HasChildren}" Value="False">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            
                            <!-- File/Folder Icon -->
                            <Image Source="{Binding Icon}" Width="16" Height="16" 
                                   Margin="0,0,5,0" VerticalAlignment="Center"/>
                            
                            <!-- File/Folder Name -->
                            <TextBlock Text="{Binding Name}" VerticalAlignment="Center"
                                       TextTrimming="CharacterEllipsis"/>
                        </StackPanel>
                        
                        <!-- Size Column -->
                        <TextBlock Grid.Column="1" Text="{Binding Size}" 
                                  VerticalAlignment="Center" 
                                  TextAlignment="Right"
                                  Margin="5,0"
                                  TextTrimming="CharacterEllipsis"/>
                        
                        <!-- Type Column -->
                        <TextBlock Grid.Column="2" Text="{Binding Type}" 
                                  VerticalAlignment="Center" 
                                  TextAlignment="Left"
                                  Margin="5,0"
                                  TextTrimming="CharacterEllipsis"/>
                        
                        <!-- Date Modified Column -->
                        <TextBlock Grid.Column="3" Text="{Binding LastModifiedStr}" 
                                  VerticalAlignment="Center" 
                                  TextAlignment="Left"
                                  Margin="5,0"
                                  TextTrimming="CharacterEllipsis"/>
                    </Grid>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
    </Grid>
</UserControl>