<UserControl x:Class="ExplorerPro.UI.FileTree.ImprovedFileTreeListView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ExplorerPro.UI.FileTree"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/FileTreeResources.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- Converter for level to margin -->
            <local:LevelToIndentConverter x:Key="LevelToIndentConverter"/>
            
            <!-- Converter for expander positioning to the right of lines -->
            <local:ExpanderRightIndentConverter x:Key="ExpanderRightIndentConverter"/>
            
            <!-- Boolean to Visibility Converter -->
            <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            
            <!-- Multi-select converters -->
            <local:BoolToMultiSelectTagConverter x:Key="BoolToMultiSelectTagConverter"/>
            <local:MultiSelectVisibilityConverter x:Key="MultiSelectVisibilityConverter"/>
        </ResourceDictionary>
    </UserControl.Resources>
    
    <!-- Main grid with shared size scope enabled for column alignment -->
    <Grid x:Name="MainGrid" Background="{DynamicResource BackgroundColor}" Grid.IsSharedSizeScope="True">
        <!-- Column Headers Row -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <!-- Column Headers with Border for background -->
        <Border Grid.Row="0" Background="{DynamicResource BackgroundColor}" BorderBrush="{DynamicResource BorderColor}" BorderThickness="0,0,0,1">
            <!-- Header ScrollViewer for horizontal sync -->
            <ScrollViewer x:Name="HeaderScrollViewer" 
                          HorizontalScrollBarVisibility="Hidden"
                          VerticalScrollBarVisibility="Disabled"
                          CanContentScroll="False">
                <Grid x:Name="HeaderGrid" Height="25">
                    <Grid.ColumnDefinitions>
                        <!-- Checkbox column for multi-selection -->
                        <ColumnDefinition Width="Auto" SharedSizeGroup="CheckboxColumn"/>
                        <ColumnDefinition x:Name="NameColumn" Width="250" MinWidth="100" MaxWidth="600" SharedSizeGroup="NameColumn"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition x:Name="SizeColumn" Width="100" MinWidth="60" MaxWidth="150" SharedSizeGroup="SizeColumn"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition x:Name="TypeColumn" Width="120" MinWidth="80" MaxWidth="200" SharedSizeGroup="TypeColumn"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition x:Name="DateColumn" Width="150" MinWidth="100" MaxWidth="250" SharedSizeGroup="DateColumn"/>
                        <ColumnDefinition Width="*"/> <!-- Fill remaining space -->
                    </Grid.ColumnDefinitions>
                    
                    <!-- Multi-select checkbox header -->
                    <CheckBox Grid.Column="0" 
                              x:Name="SelectAllCheckBox"
                              Margin="4,0,4,0"
                              VerticalAlignment="Center"
                              Visibility="{Binding IsMultiSelectMode, Converter={StaticResource BooleanToVisibilityConverter}}"
                              Click="SelectAllCheckBox_Click"
                              ToolTip="Select/Deselect All"/>
                    
                    <!-- Column Headers -->
                    <Border Grid.Column="1" BorderBrush="{DynamicResource BorderColor}" BorderThickness="0,0,1,0" Background="Transparent">
                        <TextBlock Text="Name" Padding="6,3" VerticalAlignment="Center" Foreground="{DynamicResource TextColor}"/>
                    </Border>
                    
                    <!-- Optimized GridSplitter with Preview -->
                    <GridSplitter Grid.Column="2" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                 Background="Transparent"
                                 ShowsPreview="True"
                                 PreviewStyle="{StaticResource ColumnResizePreviewStyle}"
                                 DragStarted="ColumnSplitter_DragStarted"
                                 DragDelta="ColumnSplitter_DragDelta"
                                 DragCompleted="ColumnSplitter_DragCompleted"
                                 Tag="Name">
                        <GridSplitter.Style>
                            <Style TargetType="GridSplitter">
                                <Setter Property="Cursor" Value="SizeWE"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource TreeLineHighlightColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </GridSplitter.Style>
                    </GridSplitter>
                    
                    <Border Grid.Column="3" BorderBrush="{DynamicResource BorderColor}" BorderThickness="0,0,1,0" Background="Transparent">
                        <TextBlock Text="Size" Padding="6,3" VerticalAlignment="Center" TextAlignment="Right" Foreground="{DynamicResource TextColor}"/>
                    </Border>
                    
                    <GridSplitter Grid.Column="4" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                 Background="Transparent"
                                 ShowsPreview="True"
                                 PreviewStyle="{StaticResource ColumnResizePreviewStyle}"
                                 DragStarted="ColumnSplitter_DragStarted"
                                 DragDelta="ColumnSplitter_DragDelta"
                                 DragCompleted="ColumnSplitter_DragCompleted"
                                 Tag="Size">
                        <GridSplitter.Style>
                            <Style TargetType="GridSplitter">
                                <Setter Property="Cursor" Value="SizeWE"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource TreeLineHighlightColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </GridSplitter.Style>
                    </GridSplitter>
                    
                    <Border Grid.Column="5" BorderBrush="{DynamicResource BorderColor}" BorderThickness="0,0,1,0" Background="Transparent">
                        <TextBlock Text="Type" Padding="6,3" VerticalAlignment="Center" Foreground="{DynamicResource TextColor}"/>
                    </Border>
                    
                    <GridSplitter Grid.Column="6" Width="5" HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                 Background="Transparent"
                                 ShowsPreview="True"
                                 PreviewStyle="{StaticResource ColumnResizePreviewStyle}"
                                 DragStarted="ColumnSplitter_DragStarted"
                                 DragDelta="ColumnSplitter_DragDelta"
                                 DragCompleted="ColumnSplitter_DragCompleted"
                                 Tag="Type">
                        <GridSplitter.Style>
                            <Style TargetType="GridSplitter">
                                <Setter Property="Cursor" Value="SizeWE"/>
                                <Setter Property="Focusable" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource TreeLineHighlightColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </GridSplitter.Style>
                    </GridSplitter>
                    
                    <Border Grid.Column="7" Background="Transparent">
                        <TextBlock Text="Date Modified" Padding="6,3" VerticalAlignment="Center" Foreground="{DynamicResource TextColor}"/>
                    </Border>
                    
                    <!-- Header context menu -->
                    <Grid.ContextMenu>
                        <ContextMenu x:Name="HeaderContextMenu">
                            <MenuItem Header="Auto-size Column" Click="AutoSizeColumn_Click"/>
                            <MenuItem Header="Auto-size All Columns" Click="AutoSizeAllColumns_Click"/>
                            <Separator/>
                            <MenuItem Header="Reset Column Widths" Click="ResetColumnWidths_Click"/>
                        </ContextMenu>
                    </Grid.ContextMenu>
                </Grid>
            </ScrollViewer>
        </Border>
        
        <!-- ScrollViewer to sync horizontal scrolling between header and content -->
        <ScrollViewer Grid.Row="1" x:Name="TreeScrollViewer" 
                      HorizontalScrollBarVisibility="Auto" 
                      VerticalScrollBarVisibility="Auto"
                      ScrollChanged="TreeScrollViewer_ScrollChanged"
                      CanContentScroll="False"
                      VirtualizingStackPanel.ScrollUnit="Pixel">
            <!-- File TreeView with proper column alignment and optimized virtualization -->
            <TreeView x:Name="fileTreeView" BorderThickness="0"
                     Background="{DynamicResource TreeViewBackground}"
                     VirtualizingStackPanel.IsVirtualizing="True"
                     VirtualizingStackPanel.VirtualizationMode="Recycling"
                     VirtualizingStackPanel.ScrollUnit="Pixel"
                     VirtualizingStackPanel.CacheLengthUnit="Page"
                     VirtualizingStackPanel.CacheLength="2,2"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                     ScrollViewer.IsDeferredScrollingEnabled="False"
                     Tag="{Binding IsMultiSelectMode, Converter={StaticResource BoolToMultiSelectTagConverter}}">
                
                <!-- Optimized Item Container Style -->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemWithLines}">
                        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
                        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
                    </Style>
                </TreeView.ItemContainerStyle>
                
                <TreeView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel />
                    </ItemsPanelTemplate>
                </TreeView.ItemsPanel>
                
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                        <!-- Grid with shared size groups for column alignment -->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <!-- Checkbox column for multi-selection -->
                                <ColumnDefinition SharedSizeGroup="CheckboxColumn"/>
                                <!-- Match the header column definitions exactly -->
                                <ColumnDefinition SharedSizeGroup="NameColumn"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition SharedSizeGroup="SizeColumn"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition SharedSizeGroup="TypeColumn"/>
                                <ColumnDefinition Width="5"/>
                                <ColumnDefinition SharedSizeGroup="DateColumn"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            
                            <!-- Multi-selection checkbox -->
                            <CheckBox Grid.Column="0" 
                                      Margin="4,0,4,0"
                                      VerticalAlignment="Center"
                                      IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                      Visibility="{Binding RelativeSource={RelativeSource AncestorType=TreeView}, 
                                                  Path=Tag, 
                                                  Converter={StaticResource MultiSelectVisibilityConverter}}"
                                      Click="SelectionCheckBox_Click"/>
                            
                            <!-- Name Column with tree structure -->
                            <Grid Grid.Column="1" ClipToBounds="True">
                                <!-- Background for selection -->
                                <Rectangle x:Name="SelectionBackground" Fill="Transparent" RadiusX="2" RadiusY="2"/>
                                
                                <!-- Tree structure content -->
                                <Grid>
                                    <!-- Background canvas for drawing connecting lines -->
                                    <Canvas Background="Transparent"
                                           Margin="{Binding Level, Converter={StaticResource LevelToIndentConverter}}"
                                           Height="20" HorizontalAlignment="Left" Width="40"
                                           ClipToBounds="False">
                                        
                                        <!-- Horizontal line to expander -->
                                        <Line x:Name="HorizontalLine"
                                              X1="0" Y1="10" X2="25" Y2="10"
                                              Stroke="{DynamicResource TreeLineColor}"
                                              StrokeThickness="1">
                                            <Line.Style>
                                                <Style TargetType="Line">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Level}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Line.Style>
                                        </Line>
                                        
                                        <!-- Vertical line from parent -->
                                        <Line x:Name="VerticalLine"
                                              X1="0" Y1="0" X2="0" Y2="10"
                                              Stroke="{DynamicResource TreeLineColor}"
                                              StrokeThickness="1">
                                            <Line.Style>
                                                <Style TargetType="Line">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Level}" Value="0">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Line.Style>
                                        </Line>
                                    </Canvas>
                                    
                                    <!-- Name content with indentation and expander -->
                                    <StackPanel Orientation="Horizontal"
                                               Margin="{Binding Level, Converter={StaticResource ExpanderRightIndentConverter}}">
                                        
                                        <!-- Expander Toggle Button -->
                                        <ToggleButton IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                                     VerticalAlignment="Center">
                                            <ToggleButton.Style>
                                                <Style TargetType="ToggleButton" BasedOn="{StaticResource Windows11ExpanderStyle}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding IsDirectory}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HasChildren}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ToggleButton.Style>
                                        </ToggleButton>
                                        
                                        <!-- File/Folder Icon -->
                                        <Image Source="{Binding Icon}" Width="16" Height="16" 
                                               Margin="2,0,5,0" VerticalAlignment="Center"
                                               RenderOptions.BitmapScalingMode="HighQuality"/>
                                        
                                        <!-- File/Folder Name -->
                                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center"
                                                   TextTrimming="CharacterEllipsis"
                                                   Foreground="{Binding Foreground}"
                                                   FontWeight="{Binding FontWeight}"
                                                   ToolTip="{Binding Path}"/>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                            
                            <!-- Size Column -->
                            <TextBlock Grid.Column="3" Text="{Binding Size}" 
                                      VerticalAlignment="Center" 
                                      TextAlignment="Right"
                                      Margin="5,0"
                                      TextTrimming="CharacterEllipsis"
                                      Foreground="{Binding Foreground}"
                                      FontWeight="{Binding FontWeight}"/>
                            
                            <!-- Type Column -->
                            <TextBlock Grid.Column="5" Text="{Binding Type}" 
                                      VerticalAlignment="Center" 
                                      TextAlignment="Left"
                                      Margin="5,0"
                                      TextTrimming="CharacterEllipsis"
                                      Foreground="{Binding Foreground}"
                                      FontWeight="{Binding FontWeight}"/>
                            
                            <!-- Date Modified Column -->
                            <TextBlock Grid.Column="7" Text="{Binding LastModifiedStr}" 
                                      VerticalAlignment="Center" 
                                      TextAlignment="Left"
                                      Margin="5,0"
                                      TextTrimming="CharacterEllipsis"
                                      Foreground="{Binding Foreground}"
                                      FontWeight="{Binding FontWeight}"/>
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </ScrollViewer>
    </Grid>
</UserControl>