<!-- 
=============================================================================
PHASE 1: LAYOUT ANALYSIS AND DOCUMENTATION - CURRENT STRUCTURE MAPPING
=============================================================================

OBJECTIVE: Document existing MainWindow layout before restructuring for comprehensive understanding

CURRENT LAYOUT HIERARCHY (Root to Leaf):
=============================================================================

Window (MainWindow)
├── Window.Resources (Styles, Converters, Animations, Icons)
├── Window.CommandBindings (Navigation, Edit, Custom Commands)
└── DockPanel (LastChildFill="True") [ROOT LAYOUT CONTAINER]
    ├── Toolbar (DockPanel.Dock="Top") [NAVIGATION BAR]
    │   └── UserControl with Grid layout
    │       ├── Navigation buttons (Up, Refresh)
    │       ├── Action buttons (Undo, Redo)  
    │       ├── Search/Address bar (TextBox)
    │       ├── Sidebar toggles (Left/Right panel buttons)
    │       └── Settings button
    ├── Border (DockPanel.Dock="Bottom") [STATUS BAR]
    │   └── Grid with 4 columns
    │       ├── StatusText ("Ready" indicator)
    │       ├── ItemCountText ("0 items")
    │       ├── [Empty space]
    │       └── SelectionText (Selection info)
    ├── Border (DockPanel.Dock="Left") [ACTIVITY BAR - VS CODE STYLE]
    │   └── ScrollViewer
    │       └── StackPanel (ActivityBar)
    │           ├── ActivityBarPinnedButton (Toggle Pinned Panel)
    │           ├── ActivityBarBookmarksButton (Toggle Bookmarks)
    │           ├── ActivityBarProcoreButton (Toggle Procore Links)
    │           └── ActivityBarTodoButton (Toggle To-do)
    └── Grid [MAIN CONTENT AREA - LastChildFill="True"]
        └── ChromeStyleTabControl (MainTabs) [TAB CONTAINER]
            ├── ItemTemplate (Tab header content with close buttons)
            ├── Template (Custom TabControl template)
            └── ContextMenu (Tab right-click menu)

CRITICAL UI ELEMENTS WITH x:Name REFERENCES:
=============================================================================
These elements will be affected by layout restructuring:

LAYOUT CONTAINERS:
- [DockPanel] - Root layout container (unnamed)
- ActivityBar (StackPanel) - Contains activity buttons

NAVIGATION & TOOLBAR:
- Toolbar (UserControl) - Top navigation toolbar

STATUS & INFORMATION:
- StatusText (TextBlock) - "Ready" status indicator  
- ItemCountText (TextBlock) - File count display
- SelectionText (TextBlock) - Selection information

ACTIVITY BAR BUTTONS:
- ActivityBarPinnedButton - Toggles Pinned Panel (Ctrl+P)
- ActivityBarBookmarksButton - Toggles Bookmarks (Ctrl+B) 
- ActivityBarProcoreButton - Toggles Procore Links (Ctrl+K)
- ActivityBarTodoButton - Toggles To-do Panel (Ctrl+D)

TAB MANAGEMENT:
- MainTabs (ChromeStyleTabControl) - Main tab container
- AddTabButton - Add new tab functionality

DOCKING POSITIONS MAPPING:
=============================================================================
Current DockPanel docking assignments:

- Toolbar: DockPanel.Dock="Top" (First docked element)
- Status Bar: DockPanel.Dock="Bottom" 
- Activity Bar: DockPanel.Dock="Left" (48px width)
- Main Content: LastChildFill="True" (Remaining space)

LAYOUT DEPENDENCIES TO TRACK:
=============================================================================
Code-behind dependencies that assume current structure:

1. INITIALIZATION:
   - MainWindow.xaml.cs: InitializeMainWindow() method
   - Window loading events: OnSourceInitialized, MainWindow_Loaded
   - UI element availability checks in EnsureUIElementsAvailable()

2. EVENT HANDLERS:
   - Activity Bar Click Handlers: 
     * TogglePinnedPanel_Click
     * ToggleBookmarksPanel_Click  
     * ToggleProcorePanel_Click
     * ToggleTodoPanel_Click
   - Tab Management:
     * AddTabButton_Click
     * MainTabs_SelectionChanged
     * Tab close handled by ChromeStyleTabControl

3. UI UPDATE METHODS:
   - UpdateActivityBarButtonStates() - Updates button appearance
   - UpdateStatus(), UpdateItemCount(), UpdateSelectionInfo()
   - RefreshThemeElements() - Theme switching
   - UpdateAddressBar() / UpdateToolbarAddressBar()

4. SAFE ACCESSORS:
   - SafeMainTabs, SafeStatusText, SafeItemCountText, SafeSelectionText
   - TryAccessUIElement<T>() method for thread-safe UI access

VALIDATION CHECKLIST FOR PHASE 1 SUCCESS:
=============================================================================
✓ Application builds and runs without errors
✓ Activity Bar toggles work (Pinned, Bookmarks, Procore, Todo)
✓ Tabs can be created and closed
✓ Toolbar functions (navigation, search, settings)
✓ Sidebars toggle correctly (Left/Right panels)
✓ Status bar updates properly
✓ Theme switching maintains functionality
✓ All keyboard shortcuts work
✓ Context menus appear and function
✓ Window resizing works correctly

RESTRUCTURING IMPACT ASSESSMENT:
=============================================================================
Elements that will MOVE in restructuring:
- Activity Bar (currently DockPanel.Dock="Left") 
- ChromeStyleTabControl (currently in Grid)
- Toolbar positioning may change

Elements that will STAY:
- Status Bar (DockPanel.Dock="Bottom")
- Main resource definitions
- Command bindings structure

NEXT PHASE PREPARATION:
=============================================================================
Ready for Phase 2 changes after this documentation is complete.
All dependencies mapped and validation tests established.
=============================================================================
-->

<Window x:Class="ExplorerPro.UI.MainWindow.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ExplorerPro.UI.MainWindow"
        xmlns:toolbar="clr-namespace:ExplorerPro.UI.Toolbar"
        xmlns:tabManagement="clr-namespace:ExplorerPro.UI.PaneManagement"
        xmlns:controls="clr-namespace:ExplorerPro.UI.Controls"
        xmlns:converters="clr-namespace:ExplorerPro.UI.Converters"
        xmlns:ftconverters="clr-namespace:ExplorerPro.UI.FileTree"
        mc:Ignorable="d"
        Title="Enhanced File Explorer"
        Height="800" 
        Width="1200"
        MinHeight="480" 
        MinWidth="640"
        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">

    <Window.Resources>
        <ResourceDictionary>
            <!-- 
            =============================================================================
            MERGED RESOURCE DICTIONARIES
            =============================================================================
            Include external style and resource files
            -->
            <ResourceDictionary.MergedDictionaries>
                <!-- TabStyles.xaml removed - potential conflicts with ChromeStyleTabControl -->
                <ResourceDictionary Source="../../Assets/Icons/FolderDotIcon.xaml"/>
                <ResourceDictionary Source="../../Themes/ChromeTabStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            
            <!-- 
            =============================================================================
            CONTEXT MENU STYLES
            =============================================================================
            Extracted from TabStyles.xaml to avoid conflicts with ChromeStyleTabControl
            -->
            
            <!-- Tab Context Menu Style -->
            <Style x:Key="TabContextMenuStyle" TargetType="ContextMenu">
                <Setter Property="Background" Value="#FFFFFF"/>
                <Setter Property="BorderBrush" Value="#D0D7DE"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="HasDropShadow" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ContextMenu">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="8"
                                    Padding="4">
                                <Border.Effect>
                                    <DropShadowEffect Color="#000000" 
                                                    Direction="270" 
                                                    ShadowDepth="4" 
                                                    BlurRadius="8" 
                                                    Opacity="0.2"/>
                                </Border.Effect>
                                <ItemsPresenter Margin="0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Tab Context Menu Item Style -->
            <Style x:Key="TabContextMenuItemStyle" TargetType="MenuItem">
                <Setter Property="Height" Value="32"/>
                <Setter Property="Padding" Value="12,6"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border x:Name="ItemBorder" 
                                    Background="Transparent" 
                                    CornerRadius="0"
                                    Margin="0"
                                    Padding="12,6">
                                
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Icon -->
                                    <ContentPresenter Grid.Column="0" 
                                                    ContentSource="Icon" 
                                                    VerticalAlignment="Center"
                                                    Margin="0,0,8,0"/>
                                    
                                    <!-- Header Text -->
                                    <ContentPresenter Grid.Column="1" 
                                                    ContentSource="Header" 
                                                    VerticalAlignment="Center"
                                                    TextElement.Foreground="#24292F"
                                                    TextElement.FontSize="13"/>
                                    
                                    <!-- Input Gesture Text -->
                                    <TextBlock Grid.Column="2" 
                                             Text="{TemplateBinding InputGestureText}" 
                                             VerticalAlignment="Center"
                                             Margin="8,0,0,0"
                                             Foreground="#6E7781"/>
                                </Grid>
                            </Border>
                            
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="True">
                                    <Setter TargetName="ItemBorder" Property="Background" Value="#F6F8FA"/>
                                    <Setter TargetName="ItemBorder" Property="CornerRadius" Value="4"/>
                                    <Setter TargetName="ItemBorder" Property="Margin" Value="2,1"/>
                                    <Setter TargetName="ItemBorder" Property="Padding" Value="10,5"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#8C959F"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Modern Separator Style for Context Menu -->
            <Style x:Key="ContextMenuSeparatorStyle" TargetType="Separator">
                <Setter Property="Background" Value="#D0D7DE"/>
                <Setter Property="Height" Value="1"/>
                <Setter Property="Margin" Value="6,4"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Separator">
                            <Rectangle Fill="{TemplateBinding Background}" 
                                      Height="{TemplateBinding Height}" 
                                      Margin="{TemplateBinding Margin}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <!-- 
            =============================================================================
            VALUE CONVERTERS
            =============================================================================
            Converters for binding UI element properties to data values
            -->
        
        <!-- Converts numeric count to Visibility (useful for hiding elements when count is 0) -->
        <local:CountToVisibilityConverter x:Key="CountToVisibilityConverter"/>
        
        <!-- Converts numeric count to boolean enabled state (useful for disabling buttons when count is 0) -->
        <local:CountToEnableConverter x:Key="CountToEnableConverter"/>
        
        <!-- 
        =============================================================================
        PHASE 2 TAB CONVERTERS
        =============================================================================
        Converters for tab customization features
        -->
        
        <!-- Converts Color values to SolidColorBrush for tab styling -->
        <converters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>
        
        <!-- Converts Colors to darker shades for borders and accents -->
        <converters:ColorToDarkerBrushConverter x:Key="ColorToDarkerBrushConverter"/>
        
        <!-- Converts Colors to appropriate foreground colors -->
        <converters:ColorToForegroundConverter x:Key="ColorToForegroundConverter"/>
        
        <!-- Boolean to Visibility converter for tab visibility bindings -->
        <ftconverters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        
        <!-- Inverse Boolean to Visibility converter -->
        <ftconverters:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter"/>
        
        <!-- Converts boolean IsPinned to Visibility for pin indicators -->
        <converters:PinnedToVisibilityConverter x:Key="PinnedToVisibilityConverter"/>
        
        <!-- Converts boolean IsPinned to "Pin Tab"/"Unpin Tab" text -->
        <converters:PinUnpinTextConverter x:Key="PinUnpinTextConverter"/>
        
        <!-- 
        =============================================================================
        MODERN TAB STYLING RESOURCES
        =============================================================================
        Gradient brushes and visual effects for Chrome-style tab appearance
        -->
        
        <!-- Active tab gradient: Clean white to light gray for selected tabs -->
        <LinearGradientBrush x:Key="TabActiveGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FFFFFF" Offset="0"/>
            <GradientStop Color="#F8F9FA" Offset="1"/>
        </LinearGradientBrush>
        
        <!-- Hover tab gradient: Subtle blue tint for mouse-over state -->
        <LinearGradientBrush x:Key="TabHoverGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#F0F7FF" Offset="0"/>
            <GradientStop Color="#E3F2FD" Offset="1"/>
        </LinearGradientBrush>
        
        <!-- Inactive tab gradient: Neutral gray for unselected tabs -->
        <LinearGradientBrush x:Key="TabInactiveGradient" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#FAFAFA" Offset="0"/>
            <GradientStop Color="#F0F0F0" Offset="1"/>
        </LinearGradientBrush>

        <!-- 
        =============================================================================
        TAB ANIMATION STORYBOARDS
        =============================================================================
        Smooth animations for tab interactions and visual feedback
        -->
        
        <!-- Tab hover animation: Subtle scale effect on mouse enter -->
        <Storyboard x:Key="TabHoverStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                           To="1.08" Duration="0:0:0.2">
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        
        <!-- Tab hover exit animation: Return to normal scale on mouse leave -->
        <Storyboard x:Key="TabHoverExitStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" 
                           To="1.0" Duration="0:0:0.2">
                <DoubleAnimation.EasingFunction>
                    <QuadraticEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- Modern Icon Resources -->
        <DrawingImage x:Key="WindowIcon">
            <DrawingImage.Drawing>
                <DrawingGroup ClipGeometry="M0,0 V16 H16 V0 H0 Z">
                    <GeometryDrawing Brush="#4A90E2" Geometry="F1 M16,16z M0,0z M2,2L14,2 14,14 2,14z M3,3L13,3 13,13 3,13z"/>
                    <GeometryDrawing Brush="#357ABD" Geometry="F1 M16,16z M0,0z M2,2L14,2 14,4 2,4z"/>
                </DrawingGroup>
            </DrawingImage.Drawing>
        </DrawingImage>
        
        <!-- Application-level styles and resources -->
        <Style x:Key="SeparatorStyle" TargetType="Separator">
            <Setter Property="Background" Value="#CCC" />
            <Setter Property="Width" Value="3" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#0083DB" />
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Icons now defined in UI/Resources/IconResources.xaml -->
        
        <!-- Activity Bar Button Style -->
        <Style x:Key="ActivityBarButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="0,4,0,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="ButtonBorder"
                              Background="#FFFFFF"
                              BorderBrush="#D0D7DE"
                              BorderThickness="1.5"
                              CornerRadius="8"
                              Padding="0">
                            <Border.Effect>
                                <DropShadowEffect x:Name="ButtonShadow" 
                                                Color="#FF000000" 
                                                Direction="270" 
                                                ShadowDepth="2" 
                                                BlurRadius="4" 
                                                Opacity="0.1"/>
                            </Border.Effect>
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                          To="#F6F8FA" Duration="0:0:0.15"/>
                                            <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                          To="#0969DA" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                          Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                          To="#FFFFFF" Duration="0:0:0.15"/>
                                            <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                          Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                          To="#D0D7DE" Duration="0:0:0.15"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#F0F7FF"/>
                            </Trigger>
                            <Trigger Property="Tag" Value="Active">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#E3F2FD"/>
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="#0969DA"/>
                                <Setter TargetName="ButtonBorder" Property="BorderThickness" Value="2"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- PinnedTabItemStyle removed - ChromeStyleTabControl handles pinned tab styling with ChromePinnedTabTemplate -->
        </ResourceDictionary>
    </Window.Resources>

    <Window.CommandBindings>
        <!-- Standard application commands -->
        <CommandBinding Command="ApplicationCommands.New" Executed="NewCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Open" Executed="OpenCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Save" Executed="SaveCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Close" Executed="CloseCommand_Executed" />
        
        <!-- Navigation Commands -->
        <CommandBinding Command="NavigationCommands.BrowseBack" Executed="BrowseBackCommand_Executed" />
        <CommandBinding Command="NavigationCommands.BrowseForward" Executed="BrowseForwardCommand_Executed" />
        <CommandBinding Command="NavigationCommands.BrowseHome" Executed="BrowseHomeCommand_Executed" />
        <CommandBinding Command="NavigationCommands.Refresh" Executed="RefreshCommand_Executed" />
        
        <!-- Edit Commands -->
        <CommandBinding Command="ApplicationCommands.Copy" Executed="CopyCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Cut" Executed="CutCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Paste" Executed="PasteCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Delete" Executed="DeleteCommand_Executed" />
        <CommandBinding Command="ApplicationCommands.Properties" Executed="PropertiesCommand_Executed" />

        <!-- Custom Commands (will be defined in code-behind) -->
    </Window.CommandBindings>

    <!-- 
    =============================================================================
    PHASE 2: NEW WINDOW-LEVEL LAYOUT STRUCTURE
    =============================================================================
    
    CHANGE: Root layout changed from DockPanel to Grid
    REASON: Extract Activity Bar to window level for full-height spanning
    
    NEW STRUCTURE:
    Grid (Root)
    ├── Activity Bar (Grid.Column="0", Width="52") - Full Height, Window Level
    └── DockPanel (Grid.Column="1") - Everything Else
        ├── Toolbar (DockPanel.Dock="Top")
        ├── Status Bar (DockPanel.Dock="Bottom") 
        └── Main Content (LastChildFill="True")
    -->
    
    <Grid>
        <Grid.ColumnDefinitions>
            <!-- PHASE 2: Activity Bar - Fixed width, window level -->
            <ColumnDefinition Width="52"/>
            <!-- PHASE 2: Main content - Remaining space -->
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        
        <!-- PHASE 2: Activity Bar - EXTRACTED TO WINDOW LEVEL -->
        <!-- SPANS FULL HEIGHT FROM TITLE BAR TO BOTTOM -->
        <Border Grid.Column="0" 
                Background="#F6F8FA"
                BorderBrush="#D0D7DE"
                BorderThickness="0,0,1,0">
            <Border.Effect>
                <DropShadowEffect Color="#FF000000" Direction="0" ShadowDepth="1" BlurRadius="3" Opacity="0.05"/>
            </Border.Effect>
            <ScrollViewer VerticalScrollBarVisibility="Auto" 
                          HorizontalScrollBarVisibility="Disabled">
                <StackPanel x:Name="ActivityBar" 
                            Orientation="Vertical"
                            Margin="8,8,8,0">
                    
                    <!-- Toggle Pinned Panel -->
                    <Button x:Name="ActivityBarPinnedButton"
                            ToolTip="Toggle Pinned Panel (Ctrl+P)"
                            Click="TogglePinnedPanel_Click"
                            Style="{StaticResource ActivityBarButtonStyle}">
                        <Image Source="{StaticResource PinIcon}" 
                               Width="18" Height="18"
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                    
                    <!-- Toggle Bookmarks -->
                    <Button x:Name="ActivityBarBookmarksButton"
                            ToolTip="Toggle Bookmarks (Ctrl+B)"
                            Click="ToggleBookmarksPanel_Click"
                            Style="{StaticResource ActivityBarButtonStyle}">
                        <Image Source="{StaticResource StarIcon}" 
                               Width="18" Height="18"
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                    
                    <!-- Toggle Procore Links -->
                    <Button x:Name="ActivityBarProcoreButton"
                            ToolTip="Toggle Procore Links (Ctrl+K)"
                            Click="ToggleProcorePanel_Click"
                            Style="{StaticResource ActivityBarButtonStyle}">
                        <Image Source="{StaticResource LinkIcon}" 
                               Width="18" Height="18"
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                    
                    <!-- Toggle To-do -->
                    <Button x:Name="ActivityBarTodoButton"
                            ToolTip="Toggle To-do (Ctrl+D)"
                            Click="ToggleTodoPanel_Click"
                            Style="{StaticResource ActivityBarButtonStyle}">
                        <Image Source="{StaticResource TodoIcon}" 
                               Width="18" Height="18"
                               RenderOptions.BitmapScalingMode="HighQuality"/>
                    </Button>
                </StackPanel>
            </ScrollViewer>
        </Border>
        
        <!-- PHASE 2: MAIN CONTENT AREA - WRAPPED IN DOCKPANEL -->
        <!-- PHASE 3: UPDATED TO POSITION CHROME TABS ABOVE TOOLBAR -->
        <DockPanel Grid.Column="1" LastChildFill="True">
            <!-- 
            =============================================================================
            PHASE 3: CHROME TABS RELOCATED TO TOP OF MAIN CONTENT AREA
            =============================================================================
            
            CHANGE: ChromeStyleTabControl moved from nested Grid to DockPanel top
            REASON: Create cleaner visual hierarchy with tabs above toolbar
            
            NEW HIERARCHY:
            DockPanel (Grid.Column="1")
            ├── Status Bar (DockPanel.Dock="Bottom") - MUST BE FIRST
            └── Chrome Tabs with embedded Toolbar (LastChildFill="True") - FILLS REMAINING SPACE
            -->
            
            <!-- PHASE 3 FIX: StatusBar must be positioned BEFORE TabControl to dock properly -->
            <!-- Ultra-Modern Status Bar -->
            <Border DockPanel.Dock="Bottom" 
                    Height="32"
                    Background="#F6F8FA"
                    BorderBrush="#D0D7DE"
                    BorderThickness="0,1,0,0"
                    Padding="12,0">
                <Border.Effect>
                    <DropShadowEffect Color="#FF000000" Direction="90" ShadowDepth="1" BlurRadius="3" Opacity="0.05"/>
                </Border.Effect>
                
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    
                    <!-- Status Section -->
                    <StackPanel Grid.Column="0" 
                               Orientation="Horizontal" 
                               VerticalAlignment="Center">
                        <Border Background="#22C55E" 
                                CornerRadius="4" 
                                Padding="6,2"
                                Margin="0,0,8,0">
                            <TextBlock x:Name="StatusText" 
                                      Text="Ready" 
                                      FontSize="11"
                                      FontWeight="SemiBold"
                                      Foreground="White"/>
                        </Border>
                    </StackPanel>
                    
                    <!-- Item Count Section -->
                    <StackPanel Grid.Column="1" 
                               Orientation="Horizontal" 
                               VerticalAlignment="Center">
                        <!-- Modern separator -->
                        <Rectangle Width="1" Height="16" Fill="#E1E4E8" Margin="8,0"/>
                        
                        <TextBlock x:Name="ItemCountText" 
                                  Text="0 items" 
                                  FontSize="12"
                                  FontWeight="Medium"
                                  Foreground="#656D76"
                                  VerticalAlignment="Center"
                                  Margin="8,0,0,0"/>
                    </StackPanel>
                    
                    <!-- Selection Section -->
                    <StackPanel Grid.Column="3" 
                               Orientation="Horizontal" 
                               VerticalAlignment="Center">
                        <TextBlock x:Name="SelectionText" 
                                  Text="" 
                                  FontSize="12"
                                  FontWeight="Medium"
                                  Foreground="#0969DA"
                                  VerticalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </Border>
            
            <!-- PHASE 3: CHROME TABS - NOW FILLS REMAINING SPACE WITH EMBEDDED TOOLBAR -->
            <controls:ChromeStyleTabControl x:Name="MainTabs" 
                                          Background="#FFFFFF"
                                          BorderThickness="0"
                                          TabStripPlacement="Top"
                                          ItemsSource="{Binding RelativeSource={RelativeSource Self}, Path=TabItems}"
                                          SelectedItem="{Binding SelectedTabItem, RelativeSource={RelativeSource Self}, Mode=TwoWay}">


                <!-- Simplified ItemTemplate - close button handled by ChromeTabStyles -->
                <TabControl.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Title}" 
                                      VerticalAlignment="Center"
                                   Margin="8,4"/>
                    </DataTemplate>
                </TabControl.ItemTemplate>

                <!-- ContentTemplate for tab content display -->
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ContentPresenter Content="{Binding Content}" />
                    </DataTemplate>
                </TabControl.ContentTemplate>

                <!-- ItemContainerStyle without static context menu - using dynamic menu from ChromeStyleTabControl -->
                <TabControl.ItemContainerStyle>
                    <Style TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                        <EventSetter Event="ContextMenuOpening" Handler="TabItem_ContextMenuOpening"/>
                    </Style>
                </TabControl.ItemContainerStyle>

                <!-- Ultra-Modern TabControl Template with integrated Toolbar -->
                <TabControl.Template>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" /><!-- Tab headers -->
                                <RowDefinition Height="Auto" /><!-- Toolbar -->
                                <RowDefinition Height="*" />   <!-- Tab content -->
                            </Grid.RowDefinitions>

                            <!-- Ultra-Modern Enhanced tab header with glass effect -->
                            <Border Grid.Row="0" 
                                  Background="#F6F8FA"
                                  BorderBrush="#D0D7DE"
                                  BorderThickness="0,0,0,1">
                                <Border.Effect>
                                    <DropShadowEffect Color="#FF000000" Direction="270" ShadowDepth="1" BlurRadius="3" Opacity="0.08"/>
                                </Border.Effect>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <!-- Tab headers with professional styling and scroll support for Phase 4A -->
                                    <ScrollViewer Grid.Column="0" 
                                                HorizontalScrollBarVisibility="Auto"
                                                VerticalScrollBarVisibility="Disabled"
                                                CanContentScroll="True"
                                                PanningMode="HorizontalOnly"
                                                Margin="0">
                                        <TabPanel x:Name="HeaderPanel" 
                                                 IsItemsHost="True"
                                                 Background="Transparent"
                                                 Panel.ZIndex="1"
                                                 KeyboardNavigation.TabIndex="1"
                                                 Margin="8,0,0,-1"
                                                 VerticalAlignment="Bottom"/>
                                    </ScrollViewer>
                                    
                                    <!-- Ultra-modern button panel -->
                                    <StackPanel Grid.Column="1" 
                                               Orientation="Horizontal" 
                                               VerticalAlignment="Center" 
                                               Margin="8,6">
                                        
                                        <!-- Ultra-modern add tab button -->
                                        <Button x:Name="AddTabButton" 
                                               Content="＋"
                                               Width="32" 
                                               Height="32"
                                               Margin="0,0,4,0"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontSize="16"
                                               FontWeight="Normal"
                                               ToolTip="Add new window tab"
                                               Style="{x:Null}">
                                            <Button.Template>
                                                <ControlTemplate TargetType="Button">
                                                    <Border x:Name="ButtonBorder"
                                                          Background="#FFFFFF"
                                                          BorderBrush="#D0D7DE"
                                                          BorderThickness="1.5"
                                                          CornerRadius="8"
                                                          Padding="0">
                                                        <Border.Effect>
                                                            <DropShadowEffect x:Name="ButtonShadow" 
                                                                            Color="#FF000000" 
                                                                            Direction="270" 
                                                                            ShadowDepth="2" 
                                                                            BlurRadius="4" 
                                                                            Opacity="0.1"/>
                                                        </Border.Effect>
                                                        <ContentPresenter HorizontalAlignment="Center" 
                                                                        VerticalAlignment="Center"
                                                                        TextElement.Foreground="#24292F"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Trigger.EnterActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                                      To="#F6F8FA" Duration="0:0:0.15"/>
                                                                        <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                                      To="#0969DA" Duration="0:0:0.15"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.EnterActions>
                                                            <Trigger.ExitActions>
                                                                <BeginStoryboard>
                                                                    <Storyboard>
                                                                        <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                                                      Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                                      To="#FFFFFF" Duration="0:0:0.15"/>
                                                                        <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                                                      Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                                                      To="#D0D7DE" Duration="0:0:0.15"/>
                                                                    </Storyboard>
                                                                </BeginStoryboard>
                                                            </Trigger.ExitActions>
                                                        </Trigger>
                                                        <Trigger Property="IsPressed" Value="True">
                                                            <Setter TargetName="ButtonBorder" Property="Background" Value="#F0F7FF"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>

                                        <!-- Panel toggle buttons now in Activity Bar -->
                                    </StackPanel>
                                </Grid>
                            </Border>

                            <!-- PHASE 3 FIX: Toolbar embedded in TabControl template -->
                            <toolbar:Toolbar x:Name="EmbeddedToolbar" Grid.Row="1" />

                            <!-- Enhanced content area -->
                            <Border Grid.Row="2" 
                                   Background="{TemplateBinding Background}"
                                   Padding="0"
                                   Margin="0">
                                <ContentPresenter x:Name="PART_SelectedContentHost" 
                                                ContentSource="SelectedContent"
                                                Margin="0"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </TabControl.Template>

                <!-- Context Menu for TabControl -->
                <TabControl.ContextMenu>
                    <ContextMenu Style="{StaticResource TabContextMenuStyle}" Opened="TabContextMenu_Opened" Loaded="TabContextMenu_Loaded">
                        <!-- Tab Customization Commands (Phase 2) -->
                        <MenuItem Header="Rename Tab" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="RenameTabMenuItem_Click">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76" 
                                      Data="M20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18,2.9 17.35,2.9 16.96,3.29L15.12,5.12L18.87,8.87M3,17.25V21H6.75L17.81,9.93L14.06,6.18L3,17.25Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Change Color" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="ChangeColorMenuItem_Click">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76" Stretch="Uniform"
                                      Data="M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22C13.25,22 14.45,21.78 15.56,21.38C16.28,21.12 17,20.5 17,19.5C17,18.12 15.88,17 14.5,17H13A2,2 0 0,1 11,15V14A2,2 0 0,1 13,12H14.5A3.5,3.5 0 0,0 18,8.5A5.5,5.5 0 0,0 12.5,3A5.5,5.5 0 0,0 7.5,8V9A1,1 0 0,1 6.5,10A1,1 0 0,1 5.5,9V8A6.5,6.5 0 0,1 12,2M6.5,11A1.5,1.5 0 0,1 8,12.5A1.5,1.5 0 0,1 6.5,14A1.5,1.5 0 0,1 5,12.5A1.5,1.5 0 0,1 6.5,11M9,14A1.5,1.5 0 0,1 10.5,15.5A1.5,1.5 0 0,1 9,17A1.5,1.5 0 0,1 7.5,15.5A1.5,1.5 0 0,1 9,14M17.5,7A1.5,1.5 0 0,1 19,8.5A1.5,1.5 0 0,1 17.5,10A1.5,1.5 0 0,1 16,8.5A1.5,1.5 0 0,1 17.5,7Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Clear Color" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="ClearColorMenuItem_Click"
                                 Name="ClearColorMenuItem">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem x:Name="TogglePinMenuItem"
                                 Header="Pin Tab" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="TogglePinMenuItem_Click">
                            <MenuItem.Icon>
                                <Path x:Name="PinIcon" Width="12" Height="12" Fill="#656D76"
                                      Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <Separator Style="{StaticResource ContextMenuSeparatorStyle}"/>
                        
                        <!-- Existing Commands -->
                        <MenuItem Header="New Tab" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="NewTabMenuItem_Click">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Duplicate Tab" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="DuplicateTabMenuItem_Click">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Close Tab" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="CloseTabMenuItem_Click"
                                 IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=Items.Count, Converter={StaticResource CountToEnableConverter}}">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <Separator Style="{StaticResource ContextMenuSeparatorStyle}"/>
                        
                        <MenuItem Header="Toggle Split View" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="ToggleSplitViewMenuItem_Click">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M14,10V14H10V10H14M16,10A2,2 0 0,1 18,12V16A2,2 0 0,1 16,18H12A2,2 0 0,1 10,16V12A2,2 0 0,1 12,10H16M8,12V16A2,2 0 0,1 6,18H2A2,2 0 0,1 0,16V12A2,2 0 0,1 2,10H6A2,2 0 0,1 8,12Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Detach Tab" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="DetachTabMenuItem_Click" 
                                 IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=Items.Count, Converter={StaticResource CountToEnableConverter}}">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M12,16L19.36,10.27L21,9L19.36,7.73L12,2L4.64,7.73L3,9L4.64,10.27L12,16M12,4.15L17.74,8.5L12,12.85L6.26,8.5L12,4.15Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        
                        <MenuItem Header="Move to New Window" 
                                 Style="{StaticResource TabContextMenuItemStyle}"
                                 Click="MoveToNewWindowMenuItem_Click" 
                                 IsEnabled="{Binding RelativeSource={RelativeSource AncestorType=TabControl}, Path=Items.Count, Converter={StaticResource CountToEnableConverter}}">
                            <MenuItem.Icon>
                                <Path Width="12" Height="12" Fill="#656D76"
                                      Data="M4,4H20A2,2 0 0,1 22,6V18A2,2 0 0,1 20,20H4A2,2 0 0,1 2,18V6A2,2 0 0,1 4,4M4,6V18H20V6H4Z"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TabControl.ContextMenu>
            </controls:ChromeStyleTabControl>
            
            <!-- PHASE 3: TabControl now fills remaining space and contains its own content area -->
        </DockPanel>
    </Grid>
</Window>